//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity seasonEntity { get { return GetGroup(BattleMatcher.Season).GetSingleEntity(); } }
    public Ecs.Sources.Battle.Components.SeasonComponent season { get { return seasonEntity.season; } }
    public bool hasSeason { get { return seasonEntity != null; } }

    public BattleEntity SetSeason(int newValue) {
        if (hasSeason) {
            throw new Entitas.EntitasException("Could not set Season!\n" + this + " already has an entity with Ecs.Sources.Battle.Components.SeasonComponent!",
                "You should check if the context already has a seasonEntity before setting it or use context.ReplaceSeason().");
        }
        var entity = CreateEntity();
        entity.AddSeason(newValue);
        return entity;
    }

    public void ReplaceSeason(int newValue) {
        var entity = seasonEntity;
        if (entity == null) {
            entity = SetSeason(newValue);
        } else {
            entity.ReplaceSeason(newValue);
        }
    }

    public void RemoveSeason() {
        seasonEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public Ecs.Sources.Battle.Components.SeasonComponent season { get { return (Ecs.Sources.Battle.Components.SeasonComponent)GetComponent(BattleComponentsLookup.Season); } }
    public bool hasSeason { get { return HasComponent(BattleComponentsLookup.Season); } }

    public void AddSeason(int newValue) {
        var index = BattleComponentsLookup.Season;
        var component = CreateComponent<Ecs.Sources.Battle.Components.SeasonComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSeason(int newValue) {
        var index = BattleComponentsLookup.Season;
        var component = CreateComponent<Ecs.Sources.Battle.Components.SeasonComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSeason() {
        RemoveComponent(BattleComponentsLookup.Season);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherSeason;

    public static Entitas.IMatcher<BattleEntity> Season {
        get {
            if (_matcherSeason == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.Season);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherSeason = matcher;
            }

            return _matcherSeason;
        }
    }
}
