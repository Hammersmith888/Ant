//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity attackBoostEntity { get { return GetGroup(BattleMatcher.AttackBoost).GetSingleEntity(); } }
    public Ecs.Sources.Battle.Components.Flags.AttackBoostComponent attackBoost { get { return attackBoostEntity.attackBoost; } }
    public bool hasAttackBoost { get { return attackBoostEntity != null; } }

    public BattleEntity SetAttackBoost(float newTime) {
        if (hasAttackBoost) {
            throw new Entitas.EntitasException("Could not set AttackBoost!\n" + this + " already has an entity with Ecs.Sources.Battle.Components.Flags.AttackBoostComponent!",
                "You should check if the context already has a attackBoostEntity before setting it or use context.ReplaceAttackBoost().");
        }
        var entity = CreateEntity();
        entity.AddAttackBoost(newTime);
        return entity;
    }

    public void ReplaceAttackBoost(float newTime) {
        var entity = attackBoostEntity;
        if (entity == null) {
            entity = SetAttackBoost(newTime);
        } else {
            entity.ReplaceAttackBoost(newTime);
        }
    }

    public void RemoveAttackBoost() {
        attackBoostEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public Ecs.Sources.Battle.Components.Flags.AttackBoostComponent attackBoost { get { return (Ecs.Sources.Battle.Components.Flags.AttackBoostComponent)GetComponent(BattleComponentsLookup.AttackBoost); } }
    public bool hasAttackBoost { get { return HasComponent(BattleComponentsLookup.AttackBoost); } }

    public void AddAttackBoost(float newTime) {
        var index = BattleComponentsLookup.AttackBoost;
        var component = CreateComponent<Ecs.Sources.Battle.Components.Flags.AttackBoostComponent>(index);
        component.Time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceAttackBoost(float newTime) {
        var index = BattleComponentsLookup.AttackBoost;
        var component = CreateComponent<Ecs.Sources.Battle.Components.Flags.AttackBoostComponent>(index);
        component.Time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackBoost() {
        RemoveComponent(BattleComponentsLookup.AttackBoost);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherAttackBoost;

    public static Entitas.IMatcher<BattleEntity> AttackBoost {
        get {
            if (_matcherAttackBoost == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.AttackBoost);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherAttackBoost = matcher;
            }

            return _matcherAttackBoost;
        }
    }
}
