//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity armorTimeEntity { get { return GetGroup(BattleMatcher.ArmorTime).GetSingleEntity(); } }
    public Ecs.Sources.Battle.Components.ArmorTimeComponent armorTime { get { return armorTimeEntity.armorTime; } }
    public bool hasArmorTime { get { return armorTimeEntity != null; } }

    public BattleEntity SetArmorTime(float newValue) {
        if (hasArmorTime) {
            throw new Entitas.EntitasException("Could not set ArmorTime!\n" + this + " already has an entity with Ecs.Sources.Battle.Components.ArmorTimeComponent!",
                "You should check if the context already has a armorTimeEntity before setting it or use context.ReplaceArmorTime().");
        }
        var entity = CreateEntity();
        entity.AddArmorTime(newValue);
        return entity;
    }

    public void ReplaceArmorTime(float newValue) {
        var entity = armorTimeEntity;
        if (entity == null) {
            entity = SetArmorTime(newValue);
        } else {
            entity.ReplaceArmorTime(newValue);
        }
    }

    public void RemoveArmorTime() {
        armorTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public Ecs.Sources.Battle.Components.ArmorTimeComponent armorTime { get { return (Ecs.Sources.Battle.Components.ArmorTimeComponent)GetComponent(BattleComponentsLookup.ArmorTime); } }
    public bool hasArmorTime { get { return HasComponent(BattleComponentsLookup.ArmorTime); } }

    public void AddArmorTime(float newValue) {
        var index = BattleComponentsLookup.ArmorTime;
        var component = CreateComponent<Ecs.Sources.Battle.Components.ArmorTimeComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceArmorTime(float newValue) {
        var index = BattleComponentsLookup.ArmorTime;
        var component = CreateComponent<Ecs.Sources.Battle.Components.ArmorTimeComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveArmorTime() {
        RemoveComponent(BattleComponentsLookup.ArmorTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherArmorTime;

    public static Entitas.IMatcher<BattleEntity> ArmorTime {
        get {
            if (_matcherArmorTime == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.ArmorTime);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherArmorTime = matcher;
            }

            return _matcherArmorTime;
        }
    }
}
