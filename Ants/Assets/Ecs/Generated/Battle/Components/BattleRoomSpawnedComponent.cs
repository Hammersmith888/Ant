//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity roomSpawnedEntity { get { return GetGroup(BattleMatcher.RoomSpawned).GetSingleEntity(); } }

    public bool isRoomSpawned {
        get { return roomSpawnedEntity != null; }
        set {
            var entity = roomSpawnedEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isRoomSpawned = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    static readonly Ecs.Sources.Battle.Components.RoomSpawnedComponent roomSpawnedComponent = new Ecs.Sources.Battle.Components.RoomSpawnedComponent();

    public bool isRoomSpawned {
        get { return HasComponent(BattleComponentsLookup.RoomSpawned); }
        set {
            if (value != isRoomSpawned) {
                var index = BattleComponentsLookup.RoomSpawned;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : roomSpawnedComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherRoomSpawned;

    public static Entitas.IMatcher<BattleEntity> RoomSpawned {
        get {
            if (_matcherRoomSpawned == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.RoomSpawned);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherRoomSpawned = matcher;
            }

            return _matcherRoomSpawned;
        }
    }
}
