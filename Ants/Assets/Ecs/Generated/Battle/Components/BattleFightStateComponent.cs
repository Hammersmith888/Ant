//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity fightStateEntity { get { return GetGroup(BattleMatcher.FightState).GetSingleEntity(); } }
    public Ecs.Sources.Battle.Components.FightStateComponent fightState { get { return fightStateEntity.fightState; } }
    public bool hasFightState { get { return fightStateEntity != null; } }

    public BattleEntity SetFightState(BugsFarm.Model.Enum.EFightState newValue) {
        if (hasFightState) {
            throw new Entitas.EntitasException("Could not set FightState!\n" + this + " already has an entity with Ecs.Sources.Battle.Components.FightStateComponent!",
                "You should check if the context already has a fightStateEntity before setting it or use context.ReplaceFightState().");
        }
        var entity = CreateEntity();
        entity.AddFightState(newValue);
        return entity;
    }

    public void ReplaceFightState(BugsFarm.Model.Enum.EFightState newValue) {
        var entity = fightStateEntity;
        if (entity == null) {
            entity = SetFightState(newValue);
        } else {
            entity.ReplaceFightState(newValue);
        }
    }

    public void RemoveFightState() {
        fightStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public Ecs.Sources.Battle.Components.FightStateComponent fightState { get { return (Ecs.Sources.Battle.Components.FightStateComponent)GetComponent(BattleComponentsLookup.FightState); } }
    public bool hasFightState { get { return HasComponent(BattleComponentsLookup.FightState); } }

    public void AddFightState(BugsFarm.Model.Enum.EFightState newValue) {
        var index = BattleComponentsLookup.FightState;
        var component = CreateComponent<Ecs.Sources.Battle.Components.FightStateComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFightState(BugsFarm.Model.Enum.EFightState newValue) {
        var index = BattleComponentsLookup.FightState;
        var component = CreateComponent<Ecs.Sources.Battle.Components.FightStateComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFightState() {
        RemoveComponent(BattleComponentsLookup.FightState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherFightState;

    public static Entitas.IMatcher<BattleEntity> FightState {
        get {
            if (_matcherFightState == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.FightState);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherFightState = matcher;
            }

            return _matcherFightState;
        }
    }
}
