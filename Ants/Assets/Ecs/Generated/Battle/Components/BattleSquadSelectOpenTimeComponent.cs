//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleContext {

    public BattleEntity squadSelectOpenTimeEntity { get { return GetGroup(BattleMatcher.SquadSelectOpenTime).GetSingleEntity(); } }
    public Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent squadSelectOpenTime { get { return squadSelectOpenTimeEntity.squadSelectOpenTime; } }
    public bool hasSquadSelectOpenTime { get { return squadSelectOpenTimeEntity != null; } }

    public BattleEntity SetSquadSelectOpenTime(double newValue) {
        if (hasSquadSelectOpenTime) {
            throw new Entitas.EntitasException("Could not set SquadSelectOpenTime!\n" + this + " already has an entity with Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent!",
                "You should check if the context already has a squadSelectOpenTimeEntity before setting it or use context.ReplaceSquadSelectOpenTime().");
        }
        var entity = CreateEntity();
        entity.AddSquadSelectOpenTime(newValue);
        return entity;
    }

    public void ReplaceSquadSelectOpenTime(double newValue) {
        var entity = squadSelectOpenTimeEntity;
        if (entity == null) {
            entity = SetSquadSelectOpenTime(newValue);
        } else {
            entity.ReplaceSquadSelectOpenTime(newValue);
        }
    }

    public void RemoveSquadSelectOpenTime() {
        squadSelectOpenTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent squadSelectOpenTime { get { return (Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent)GetComponent(BattleComponentsLookup.SquadSelectOpenTime); } }
    public bool hasSquadSelectOpenTime { get { return HasComponent(BattleComponentsLookup.SquadSelectOpenTime); } }

    public void AddSquadSelectOpenTime(double newValue) {
        var index = BattleComponentsLookup.SquadSelectOpenTime;
        var component = CreateComponent<Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSquadSelectOpenTime(double newValue) {
        var index = BattleComponentsLookup.SquadSelectOpenTime;
        var component = CreateComponent<Ecs.Sources.Battle.Components.SquadSelectOpenTimeComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSquadSelectOpenTime() {
        RemoveComponent(BattleComponentsLookup.SquadSelectOpenTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherSquadSelectOpenTime;

    public static Entitas.IMatcher<BattleEntity> SquadSelectOpenTime {
        get {
            if (_matcherSquadSelectOpenTime == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.SquadSelectOpenTime);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherSquadSelectOpenTime = matcher;
            }

            return _matcherSquadSelectOpenTime;
        }
    }
}
